
@model TimeSheet.Models.TimeSheetViewModel

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src=" https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />


@*<div class="panel-body table-bordered">*@
<div class="table-bordered table-condensed table-responsive" style="width:850px;margin-left:40px;margin-bottom:270px">
    <div class="panel-heading" align="center" style="height:40PX;width:850px;background-color:#FFA500;margin-top:0px;color:white;">
        BOOK RESOURCE
    </div>
    <br>
    <div class="container" style="font-size:x-small;color:grey; margin-left:80px">
        <div class="form-group">
            @using (Html.BeginForm("Register", "TimeSheet", FormMethod.Post))
            {
                if (TempData["BookedResourceMessage"] != null)
                {
                    <script>alert(TempData["BookedResourceMessage"].ToString());</script>
                }
                    <div class="row" style="padding-top:10px">

                        <div class="form-group required col-md-6">
                            <label class="control-label">Facility</label>

                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.WarehouseNameId, Model.WarehouseNameList, "Warehouse", new { @class = "form-control ", id = "ddlregWarehouseNameId" })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.WarehouseNameId, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group  required col-md-6">
                            <label class="control-label">Project</label>

                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.ProjectID, Model.Projectlist, "Select a Project", new { @class = "form-control ddlregCustomerID", id = "ddlregCustomerID" })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.ProjectID, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group  required col-md-6">
                            <label class="control-label">Employment Type</label>
                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.EmploymentTypeID, Model.EmploymentList, "RESOURCE TYPE", new { @class = "form-control", id = "ddlEmploymentId" })
                        </div>

                        <div class="form-group  required col-md-6">
                            <label class="control-label">Opportunity Number</label>

                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Opportunity Number", new { @class = "form-control", id = "ddlRegOpportunityNumberID" })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group required col-md-6">
                            <label class="control-label">Resource</label><br />
                            @Html.DropDownListFor(model => Model.ResourceIDs, Model.CandidateNameList, new { @id = "CandidateNameId", @style = "height:10px; width:10px;", @multiple = "multiple" })

                            @Html.ValidationMessageFor(model => Model.ResourceIDs, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group  required col-md-6">
                            <label class="control-label">Job Number</label>
                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.JobID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Job", new { @class = "form-control", id = "JobID" })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.JobID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group required col-md-6">
                            <label class="control-label">Start Date</label>

                            @Html.EditorFor(model => model.TimeSheetRegisterModel.Day, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DatePickId" } })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.Day, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group  required col-md-6">
                            <label class="control-label">Activity</label>

                            @Html.DropDownListFor(model => model.ServiceActivityID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Service", new { @class = "form-control", id = "ServiceActivityID" })
                            @Html.ValidationMessageFor(model => model.ServiceActivityID, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group  required col-md-6">
                            <label class="control-label">Start Time</label>
                            @Html.EditorFor(model => model.TimeSheetRegisterModel.StartTime, new { htmlAttributes = new { @class = "form-control", id = "txtStartTime" } })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.StartTime, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>OLA Target</label>
                            @Html.EditorFor(model => model.TimeSheetRegisterModel.OLATarget, new { htmlAttributes = new { @class = "form-control", id = "txtOLA" } })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.OLATarget, "", new { @class = "text-danger" })

                        </div>

                        <div class="form-group  required col-md-6">
                            <label class="control-label">End Time</label>

                            @Html.EditorFor(model => model.TimeSheetRegisterModel.EndTime, new { htmlAttributes = new { @class = "form-control", id = "txtEndTime" } })
                            @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.EndTime, "", new { @class = "text-danger" })
                        </div>



                        <div class="form-group col-md-6">
                            <label>Theme Colour</label>
                            @Html.DropDownListFor(model => model.TimeSheetRegisterModel.Colour, new SelectList(new[] { "Red", "Blue", "Black", "Green", "Pink" }), new { @class = "form-control", id = "ddlColour" })
                        </div>

                    </div>
                <div class=" col-md-offset-5">
                    <button type="submit" class="btn btn-warning btn-md" id="btnregister">
                        <span class="glyphicon glyphicon-ok-sign"></span> Register
                    </button>
                </div>

            }

        </div>
    </div>
    </div>
<style>
        .form-group {
        margin-bottom: 2px;
        padding-right: 10px;
        padding-bottom: 5px;
        padding-left:15px;
        font-size: 12px;
        border-radius: 9px;
        padding-bottom: 5px;
        margin-top: 2px;
    }  
    .multiselect.dropdown-toggle {
        text-align: left;
    }

    .col-md-6 {
        position: relative;
        min-height: 1px;
        padding-right:20px;
        padding-left: 15px
    }

    .form-control {
        margin-bottom: 12px;
        margin-right:80px;
    }

  .form-group.required .control-label:after {
            content: "*";
            color: red;
            padding-bottom:15px;
        }
</style>

<script>
    $('#ddlregWarehouseNameId, #ddlEmploymentId').change(function () {
       
                 var warehouseUrl = '';
        var WarehouseResource = $('#ddlregWarehouseNameId');
        var employmentType = $('#ddlEmploymentId');
                 var id = $(this).val();
                 
                     warehouseUrl = '@Url.Action("WarehouseResource", "DropDownLoader")';

                    $.getJSON(warehouseUrl, { WarehouseID: $('#ddlregWarehouseNameId').val(), EmploymentType: $('#ddlEmploymentId').val() }, function (response) {
                        $('#CandidateNameId').empty().multiselect('refresh')                        
                            $.each(response, function (index, item) {
                                $('#CandidateNameId').append($('<option></option>').text(item.Value).val(item.Id));                           
                             
                            });

                        $('#CandidateNameId').multiselect('rebuild');
                       });
            }); 

            $('.project').change(function () {
                        var loadUrl = '@Url.Action("ProjectOpportunities", "ManageCalender")';
                    var loads = $('#OpportunityID');
                        var id = $(this).val();
                        $.getJSON(loadUrl, { projectid: id }, function (response) {
                            loads.empty(); // remove any existing options
                            loads.append($('<option></option>').text("Opportunity").val(0));
                            $.each(response, function (index, item) {
                                loads.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });

                $('.ddlregCustomerID').change(function () {
                        var loadUrl = '@Url.Action("ProjectOpportunities", "ManageCalender")';
                    var loads = $('#ddlRegOpportunityNumberID');
                        var id = $(this).val();
                        $.getJSON(loadUrl, { projectid: id }, function (response) {
                            loads.empty(); // remove any existing options
                            loads.append($('<option></option>').text("Select Opportunity").val(0));
                            $.each(response, function (index, item) {
                                loads.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });
                $('#ddlRegOpportunityNumberID').change(function () {

                    var ActivityUrl = '@Url.Action("ProjectActivities", "ManageCalender")';
                    var Activities = $('#ServiceActivityID');
                        var id = $(this).val();
                    $.getJSON(ActivityUrl, { OpportunityId: id }, function (response) {
                            Activities.empty();
                        Activities.append($('<option></option>').text("Select Activity").val(0));
                            $.each(response, function (index, item) {
                                Activities.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });

   
$('#ddlRegOpportunityNumberID').change(function () {

                    var ActivityUrl = '@Url.Action("JobNo", "ManageCalender")';
                     var jobno = $('#JobID');
                    var id = $(this).val();
                            $.getJSON(ActivityUrl, { OpportunityId: id }, function (response) {
                        jobno.empty();
                        jobno.append($('<option></option>').text("Select Job").val(0));
                            $.each(response, function (index, item) {
                                jobno.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });

                $('#btnregister').click(function () {
                    @if (!ViewData.ModelState.IsValid)
                    {

                    }
                var loadUrl = '@Url.Action("PostResourceData", "Resource")';
                var loads = $('#ddlRegOpportunityNumberID');
                var test = $('#CandidateNameId').val();
                var data = {
                    'Day' : $('#DatePickId').val(),
                    'ProjectID' : $('#ddlregCustomerID').val(),
                    'WarehouseID' : $('#ddlregWarehouseNameId').val(),
                    'OpportunityID': $('#ddlRegOpportunityNumberID').val(),
                    'JobID': $('#JobID').val(),
                    'ResourceIds': $('#CandidateNameId').val(),
                    'ServiceActivityID': $('#ServiceActivityID').val(),
                    'StartTime' :  $('#txtStartTime').val(),
                    'EndTime': $('#txtEndTime').val(),
                    //'EndDate': $('#EndDateId').val(),
                    'Colour' :  $('#ddlColour').val(),
                    'OLATarget' : $('#txtOLA').val()
                };                      
                $.post(loadUrl, data, function (response) {                            
                });
            })

    $('#CandidateNameId').multiselect({
        includeSelectAllOption: true,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });

</script>