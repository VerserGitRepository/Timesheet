
@model TimeSheet.Models.TimeSheetViewModel

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src=" https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Scripts/bootstrap-multiselect.css" rel="stylesheet" />



<section id="tabs" class="project-tab" >
    <div class="container" style="width:170%; padding-top:15px; margin-left: 1px; border-color:black">
        <nav>
            <ul class="nav nav-tabs" style="padding-top:15px" id="myTab" role="tablist">
                <li style="background-color:lightgray; font:14px; color:black" class="active"><a data-toggle="tab" href="#tblCustomers">BOOK RESOURCES</a></li>
                <li style="background-color:lightgray"><a data-toggle="tab" href="#MANAGERESOURCES">BOOK PROJECT MANAGERS</a></li>

            </ul>
        </nav>
        <div class="tab-content" style="border-width:thin;border-style:solid;border-color:lightgray;width:70%;padding-top:10px;margin-right:0px">

            <div id="tblCustomers" class="tab-pane fade  in active" role="tabpanel">
                <div class="table table-responsive" id="tblCustomers"  style="padding-left:50px;padding-bottom:30px;border-color:lightgray">
                    @using (Html.BeginForm("Register", "TimeSheet", FormMethod.Post))
                    {
                        if (TempData["BookedResourceMessage"] != null)
                        {
                            <script>alert(TempData["BookedResourceMessage"].ToString());</script>
                        }
                            <div class="row" style="padding-top:10px">

                                <div class="form-group required col-md-6">
                                    <label class="control-label">Facility</label>

                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.WarehouseNameId, Model.WarehouseNameList, "Warehouse", new { @class = "form-control ", id = "ddlregWarehouseNameId" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.WarehouseNameId, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Project</label>

                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.ProjectID, Model.Projectlist, "Select a Project", new { @class = "form-control ddlregCustomerID", id = "ddlregCustomerID" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.ProjectID, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Employment Type</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.EmploymentTypeID, Model.EmploymentList, "RESOURCE TYPE", new { @class = "form-control", id = "ddlEmploymentId" })
                                </div>

                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Opportunity Number</label>

                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Opportunity Number", new { @class = "form-control", id = "ddlRegOpportunityNumberID" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group required col-md-6">
                                    <label class="control-label">Resource</label><br />
                                    @Html.DropDownListFor(model => Model.ResourceIDs, Model.CandidateNameList, new { @id = "CandidateNameId", @style = "height:10px; width:10px;", @multiple = "multiple" })

                                    @Html.ValidationMessageFor(model => Model.ResourceIDs, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Job Number</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.JobID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Job", new { @class = "form-control", id = "JobID" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.JobID, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group required col-md-6">
                                    <label class="control-label">Start Date</label>

                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.Day, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DatePickId" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.Day, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Activity</label>

                                    @Html.DropDownListFor(model => model.ServiceActivityID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Service", new { @class = "form-control", id = "ServiceActivityID" })
                                    @Html.ValidationMessageFor(model => model.ServiceActivityID, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Start Time</label>
                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.StartTime, new { htmlAttributes = new { @class = "form-control", id = "txtStartTime" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.StartTime, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label>OLA Target</label>
                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.OLATarget, new { htmlAttributes = new { @class = "form-control", id = "txtOLA" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.OLATarget, "", new { @class = "text-danger" })

                                </div>

                                <div class="form-group  required col-md-6">
                                    <label class="control-label">End Time</label>

                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.EndTime, new { htmlAttributes = new { @class = "form-control", id = "txtEndTime" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.EndTime, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-md-6">
                                    <label>Vehicle</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.Vechicles, new SelectList(new[] {"No Vehicle", "Verser Van ", "Versr Transit", "Verser Truck" }), new { @class = "form-control", id = "ddlVan" })
                                </div>

                                <div class="form-group col-md-6">
                                    <label>Theme Colour</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.Colour, new SelectList(new[] { "Red", "Blue", "Black", "Green", "Pink" }), new { @class = "form-control", id = "ddlColour" })
                                </div>

                            </div>
                        <div class=" col-md-offset-5">
                            <button type="submit" class="btn btn-warning btn-md" id="btnregister">
                                <span class="glyphicon glyphicon-ok-sign"></span> Register
                            </button>
                        </div>

                    }
                </div>
            </div>
                <div id="MANAGERESOURCES" class="tab-pane fade" role="tabpanel">

                    <div class="table table-responsive" id="MANAGERESOURCES" style="padding-left:50px;padding-bottom:30px;border-color:lightgray">
                        @using (Html.BeginForm("Register", "TimeSheet", FormMethod.Post))
                        {
                            if (TempData["BookedResourceMessage"] != null)
                            {
                                <script>alert(TempData["BookedResourceMessage"].ToString());</script>
                            }
                            <div class="row" style="padding-top:10px">

                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Project</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.ProjectID, Model.Projectlist, "Select a Project", new { @class = "form-control ddlregCustomerID", id = "ddlregCustomerIDPM" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.ProjectID, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group required col-md-6">
                                    <label class="control-label">Resource</label><br />
                                    @Html.DropDownListFor(model => Model.ResourceIDs, Model.ProjectManagerNameList, new { @id = "CandidateNameIdPM", @style = "height:10px; width:10px;", @multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => Model.ResourceIDs, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px">
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Opportunity Number</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Opportunity Number", new { @class = "form-control", id = "ddlRegOpportunityNumberIDPM" })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.OpportunityNumberID, "", new { @class = "text-danger" })
                                </div>


                                <div class="form-group required col-md-6">
                                    <label class="control-label">Start Date</label>

                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.Day, new { htmlAttributes = new { @class = "form-control date-picker", Id = "DatePickIdPM" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.Day, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px">
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Activity</label>

                                    @Html.DropDownListFor(model => model.ServiceActivityID, new SelectList(Enumerable.Empty<SelectListItem>()), "Select a Service", new { @class = "form-control", id = "ServiceActivityIDPM" })
                                    @Html.ValidationMessageFor(model => model.ServiceActivityID, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">Start Time</label>
                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.StartTime, new { htmlAttributes = new { @class = "form-control", id = "txtStartTimePM" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.StartTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row" style="padding-top:10px">
                                <div class="form-group col-md-6">
                                    <label>Theme Colour</label>
                                    @Html.DropDownListFor(model => model.TimeSheetRegisterModel.Colour, new SelectList(new[] { "Red", "Blue", "Black", "Green", "Pink" }), new { @class = "form-control", id = "ddlColourPM" })
                                </div>
                                <div class="form-group  required col-md-6">
                                    <label class="control-label">End Time</label>

                                    @Html.EditorFor(model => model.TimeSheetRegisterModel.EndTime, new { htmlAttributes = new { @class = "form-control", id = "txtEndTimePM" } })
                                    @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.EndTime, "", new { @class = "text-danger" })
                                </div>
                                
                            </div>                          
                            <div class="row" style="width:700px">
                                <label>Comments</label>
                                @Html.TextAreaFor(model => model.TimeSheetRegisterModel.TimeSheetComments, new {@id="txtComments", placeholder = "Your msg here...", @class = "form-control-100 textarea", style = "border:solid 1px lightgray;" })
                                @Html.ValidationMessageFor(model => model.TimeSheetRegisterModel.TimeSheetComments, "", new { @class = "text-danger" })
                            </div>
                          
                                <div class=" col-md-offset-5" style="padding-top:20px">
                                    <button type="submit" class="btn btn-warning btn-md" id="btnregisterPM" >
                                        <span class="glyphicon glyphicon-ok-sign"></span> Register
                                    </button>
                                </div>
                                                               
                                }
                          
                </div>
            </div>
    </div>
        </div>
</section>

<style>
    .form-control-100 {
        max-width: 100%;
    }
    .form-group {
        margin-bottom: 2px;
        padding-right: 10px;
        padding-bottom: 5px;
        padding-left: 15px;
        font-size: 12px;
        border-radius: 9px;
        padding-bottom: 5px;
        margin-top: 2px;
    }
    .textarea {
        display: block;
        width: 100%;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
    .multiselect.dropdown-toggle {
        text-align: left;
    }
    .MultilineText {
        width: 1850px;
        height: 700px;
    }
    .nav-tabs > li.active > a,
    .nav-tabs > li.active > a:hover,
    .nav-tabs > li.active > a:focus {
        color: #555555;
        cursor: default;
        background-color: orange;
        border: 1px solid #dddddd;
        border-bottom-color: transparent;
    }

    .col-md-6 {
        position: relative;
        min-height: 1px;
        padding-right: 20px;
        padding-left: 15px
    }

    .form-control {
        margin-bottom: 12px;
        margin-right: 80px;
    }

    .nav-tabs {
        border: none
    }

    .form-group.required .control-label:after {
        content: "*";
        color: red;
        padding-bottom: 15px;
    }
</style>

<script>
    $('#ddlregWarehouseNameId, #ddlEmploymentId').change(function () {

                 var warehouseUrl = '';
        var WarehouseResource = $('#ddlregWarehouseNameId');
        var employmentType = $('#ddlEmploymentId');
                 var id = $(this).val();

                     warehouseUrl = '@Url.Action("WarehouseResource", "DropDownLoader")';

                    $.getJSON(warehouseUrl, { WarehouseID: $('#ddlregWarehouseNameId').val(), EmploymentType: $('#ddlEmploymentId').val() }, function (response) {
                        $('#CandidateNameId').empty().multiselect('refresh')
                            $.each(response, function (index, item) {
                                $('#CandidateNameId').append($('<option></option>').text(item.Value).val(item.Id));

                            });

                        $('#CandidateNameId').multiselect('rebuild');
                       });
            });

            $('.project').change(function () {
                        var loadUrl = '@Url.Action("ProjectOpportunities", "ManageCalender")';
                    var loads = $('#OpportunityID');
                        var id = $(this).val();
                        $.getJSON(loadUrl, { projectid: id }, function (response) {
                            loads.empty(); // remove any existing options
                            loads.append($('<option></option>').text("Opportunity").val(0));
                            $.each(response, function (index, item) {
                                loads.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });

                $('.ddlregCustomerID').change(function () {
                        var loadUrl = '@Url.Action("ProjectOpportunities", "ManageCalender")';
                    var loads = $('#ddlRegOpportunityNumberID');
                        var id = $(this).val();
                        $.getJSON(loadUrl, { projectid: id }, function (response) {
                            loads.empty(); // remove any existing options
                            loads.append($('<option></option>').text("Select Opportunity").val(0));
                            $.each(response, function (index, item) {
                                loads.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });
                $('#ddlRegOpportunityNumberID').change(function () {

                    var ActivityUrl = '@Url.Action("ProjectActivities", "ManageCalender")';
                    var Activities = $('#ServiceActivityID');
                        var id = $(this).val();
                    $.getJSON(ActivityUrl, { OpportunityId: id }, function (response) {
                            Activities.empty();
                        Activities.append($('<option></option>').text("Select Activity").val(0));
                            $.each(response, function (index, item) {
                                Activities.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });


$('#ddlRegOpportunityNumberID').change(function () {

                    var ActivityUrl = '@Url.Action("JobNo", "ManageCalender")';
                     var jobno = $('#JobID');
                    var id = $(this).val();
                            $.getJSON(ActivityUrl, { OpportunityId: id }, function (response) {
                        jobno.empty();
                        jobno.append($('<option></option>').text("Select Job").val(0));
                            $.each(response, function (index, item) {
                                jobno.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });



    $('#ddlregCustomerIDPM').change(function () {
                        var loadUrl = '@Url.Action("ProjectOpportunities", "ManageCalender")';
                    var loads = $('#ddlRegOpportunityNumberIDPM');
                        var id = $(this).val();
                        $.getJSON(loadUrl, { projectid: id }, function (response) {
                            loads.empty(); // remove any existing options
                            loads.append($('<option></option>').text("Select Opportunity").val(0));
                            $.each(response, function (index, item) {
                                loads.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });
    $('#ddlRegOpportunityNumberIDPM').change(function () {

                    var ActivityUrl = '@Url.Action("ProjectActivities", "ManageCalender")';
                    var Activities = $('#ServiceActivityIDPM');
                        var id = $(this).val();
                    $.getJSON(ActivityUrl, { OpportunityId: id }, function (response) {
                            Activities.empty();
                        Activities.append($('<option></option>').text("Select Activity").val(0));
                            $.each(response, function (index, item) {
                                Activities.append($('<option></option>').text(item.Value).val(item.Id));
                            });
                        });
                });
    $('#btnregister, #btnregisterPM').click(function () {
        var data = null;
       // alert(this.id);
        if (this.id == "btnregister") {
            var end_time = $('#txtEndTime').val();
            var start_time = $('#txtStartTime').val();

            var stt = new Date("May 26, 2016 " + start_time);//arbitary
            stt = stt.getTime();

            var endt = new Date("May 26, 2016 " + end_time);//arbitary
            endt = endt.getTime();
            var diff = (endt - stt) / 1000;
            diff /= (60);
            diff = Math.abs(Math.round(diff));
            if (stt >= endt) {
                alert('start time should be prior to endtime');
                return;
            }
            if (diff <= 15) {
                alert("Minimum booking time shold not be less than 15 mins.");
                return;
            }
        }
        if (this.id == "btnregisterPM") {
            var end_time = $('#txtEndTimePM').val();
            var start_time = $('#txtStartTimePM').val();

            var stt = new Date("May 26, 2016 " + start_time);//arbitary
            stt = stt.getTime();

            var endt = new Date("May 26, 2016 " + end_time);//arbitary
            endt = endt.getTime();
            var diff = (endt - stt) / 1000;
            diff /= (60);
            diff = Math.abs(Math.round(diff));
            if (stt >= endt) {
                alert('start time should be prior to endtime');
                return;
            }
            if (diff <= 15) {
                alert("Minimum booking time shold not be less than 15 mins.");
                return;
            }
        }
                    @if (!ViewData.ModelState.IsValid)
                    {

                    }
                var loadUrl = '@Url.Action("PostResourceData", "Resource")';
                var loads = $('#ddlRegOpportunityNumberID');
        var test = $('#CandidateNameId').val();
        if (this.id == "btnregister") {
            data = {
                'Day': $('#DatePickId').val(),
                'ProjectID': $('#ddlregCustomerID').val(),
                'WarehouseID': $('#ddlregWarehouseNameId').val(),
                'OpportunityID': $('#ddlRegOpportunityNumberID').val(),
                'JobID': $('#JobID').val(),
                'ResourceIds': $('#CandidateNameId').val(),
                'ServiceActivityID': $('#ServiceActivityID').val(),
                'StartTime': $('#txtStartTime').val(),
                'EndTime': $('#txtEndTime').val(),
                //'EndDate': $('#EndDateId').val(),
                'Colour': $('#ddlColour').val(),
                'OLATarget': $('#txtOLA').val()
            };
        }
        else {
            data = {
                'Day': $('#DatePickIdPM').val(),
                'ProjectID': $('#ddlregCustomerIDPM').val(),
                
                'OpportunityID': $('#ddlRegOpportunityNumberIDPM').val(),
                
                'ResourceIds': $('#CandidateNameIdPM').val(),
                'ServiceActivityID': $('#ServiceActivityIDPM').val(),
                'StartTime': $('#txtStartTimePM').val(),
                'EndTime': $('#txtEndTimePM').val(),
                
                'Colour': $('#ddlColourPM').val(),
                'TimeSheetComments': $('#txtComments').val()
                
            };

        }
                $.post(loadUrl, data, function (response) {
                });
            })

    $('#CandidateNameId').multiselect({
        includeSelectAllOption: true,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#CandidateNameIdPM').multiselect({
        includeSelectAllOption: true,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });

</script>