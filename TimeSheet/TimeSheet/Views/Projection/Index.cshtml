@using System.Linq;
@*@model IEnumerable<TimeSheet.Models.ProjectDetailsModel>*@
@model TimeSheet.Models.ProjectionModel
@{
    ViewBag.Title = "Index";
}
<script src="https://code.jquery.com/jquery-3.3.1.js" type="text/javascript"></script>
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src=" https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://unpkg.com/balloon-css/balloon.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>

<div class="container" style="margin-left:0px">
    <div class="row" id="MANAGEPROJECTION">
        <div class="col-md-12">
            <table class="table-bordered table-responsive-md text-center table-hover table-scroll" id="MANAGEPROJECTION">
                <thead style="background-color:#FFA500;color:white ">
                    <tr>

                        <th>ProjectName</th>
                        <th>Oppurtunity</th>
                        <th>PM</th>
                        <th>Services</th>
                        <th>Facility</th>
                        <th>ActivityDate</th>
                        <th>Quantity</th>
                        <th>EstimatedInvoiceDate</th>
                        <th>Comments&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                        <th style="width:20px"></th>
                        <th class="hidden"></th>
                        <th class="hidden"></th>

                    </tr>
                </thead>
                <tbody class="table">
                    @foreach (var item in Model.projectionOpportunityModel)
                    {
                        <tr>
                            <td class="ProjectName">
                                <span id="txtProjectName"> @Html.DisplayFor(modelItem => item.ProjectName) </span>
                            </td>
                            <td class="opportunity">
                                <span id="txtOpportunityId">@Html.DisplayFor(modelItem => item.OpportunityNumber) </span>
                            </td>
                            <td class="PM">
                                <span id="txtPM">@Html.DisplayFor(modelItem => item.ProjectManager) </span>
                            </td>
                            <td data-balloon-length="xlarge" aria-label='@item.Activity' data-balloon-pos="up">
                                <input type="text" id="txtActivityDesc" value='@item.Activity' disabled="disabled" />
                                <input class="hidden" type="text" id="hdntxtActivityDesc" value="@item.Activity" />


                            </td>
                            <td class="dropdownListTD">

                                @Html.DropDownList("ddlWarehouseID", Model.WarehouseList, "Facility")

                                <input class="hidden" type="text" id="hdnddlLidt" value="@item.wareHouseName" />
                                @Html.DropDownList("hdnddlWarehouseId", Model.WarehouseList, "Facility", new { @class = "hidden" })

                            </td>
                            <td>
                                @if (item.ActualQuantity > 0)
                                {
                                    if (item.DateAllocated.HasValue)
                                    {
                                        <span id="startTime">@item.DateAllocated.Value.ToShortDateString()</span>
                                        @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                        <input class="hidden" type="text" id="hdnTxtDtAlctd" value="@item.DateAllocated.Value.ToString("yyyy-MM-dd")" />


                                    }
                                    else
                                    {
                                        <span id="startTime"></span>
                                        @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                    }
                                }
                                else
                                {
                                    <span id="startTime"></span>
                                    @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                }

                            </td>
                            <td>

                                <span>@Html.DisplayFor(modelItem => item.ActualQuantity)</span>
                                <input type="text" id="quantity" class="txtQuantity" value="@item.ActualQuantity" style="display:none" />
                                <input class="hidden" type="text" id="hdnTxtQnty" value="@item.ActualQuantity" />
                            </td>
                            <td>

                                @if (item.ActualQuantity > 0)
                                {
                                    if (item.DateInvoiced.HasValue)
                                    {
                                        <span id="endTime">@item.DateInvoiced.Value.ToShortDateString()</span>
                                        @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                        <input class="hidden" type="text" id="hdnTxtDtInvced" value="@item.DateInvoiced.Value.ToString("yyyy-MM-dd")" />


                                    }
                                    else
                                    {
                                        <span id="endTime"></span>
                                        @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                    }
                                }
                                else
                                {
                                    <span id="endTime"></span>
                                    @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                }

                            </td>
                            <td class="commentsLine">
                                <span id="comments">@item.Comments</span>
                                <input type="text" id="comments" value="@item.Comments" style="display:none" />
                            </td>
                            <td>
                                <a href="#" class="Change btn btn-primary a-btn-slide-text">
                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                    <span><strong>Change</strong></span>
                                </a>
                                <a href="#" onclick="Register(this,true);" class="Add btn btn-info a-btn-slide-text" style="display:none">
                                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    <span><strong>Add</strong></span>
                                </a>
                                <a href="#" onclick="Register(this,false);" class="Update btn btn-success a-btn-slide-text" style="display:none">
                                    <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                                    <span><strong>Update</strong></span>
                                </a>
                                <a href="#" class="Cancel btn btn-danger a-btn-slide-text" style="display:none">
                                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                                    <span><strong>Cancel</strong></span>
                                </a>
                                @*<a class="Delete" href="javascript:;">Delete</a>*@
                            </td>
                            <td class="hidden"><input type="text" id="txtServiceActvty" value="@item.ServiceActivityId" /></td>
                            <td class="hidden"><input type="text" id="txtActvty" value="@item.ActivityId" /></td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>


    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")"></script>
    <script type="text/javascript">
    </script>
}
<script language="javascript" type="text/javascript">
        function InsertSpaces(value) {
            var emptySpaceString = "";
            for (i = 0; i < value; i++)
            {
                emptySpaceString +="&nbsp;"
            }
            return emptySpaceString;
    }
 SetDDLValue();
    $(document).ready(function () {
       // alert('document ready');
        $('table#MANAGEPROJECTION').DataTable();
       // SetDDLValue();


    });


    function SetDDLValue() {
        //alert('before document ready');
        $("tbody tr td.dropdownListTD").each(function LoopTR() {
            var ratingTdText = $(this);
            if ($(ratingTdText).find("#hdnddlLidt").val() != "") {
                 $(ratingTdText).find("#ddlWarehouseID option").each(function(i){
                     //alert($(ratingTdText).find("#hdnddlLidt").val());
                     if (($(this).text() == $(ratingTdText).find("#hdnddlLidt").val())) {
                         $(this).attr('selected','selected')
                     }
                });
            }
             if ($(ratingTdText).find("#hdnddlLidt").val() != "") {
                 $(ratingTdText).find("#hdnddlWarehouseId option").each(function(i){
                     //alert($(ratingTdText).find("#hdnddlLidt").val());
                     if (($(this).text() == $(ratingTdText).find("#hdnddlLidt").val())) {
                         $(this).attr('selected','selected')
                     }
                });
            }

        });
    }


    //Edit event handler.
    $("body").on("click", "#MANAGEPROJECTION .Change", function () {
        var row = $(this).closest("tr");

        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                $(this).find("input").show();
                $(this).find("span").hide();
                 $(this).toggleClass('selected');
            }
        });
        row.find(".Update").show();
        row.find(".Cancel").show();
        row.find(".Add").show();

        $(this).hide();
    });

    //Update event handler.
    //$("body").on("click", "#MANAGEPROJECTION .Update", Register());
    //$("body").on("click", "#MANAGEPROJECTION .Add", Register());
    //Cancel event handler.
   
    function Register(theRow,isAdd)
    {
         $(document).ready(function () {
            //if(isAdd)
            //alert('test');
            //return;

            var row = $(theRow).closest("tr");
            //$("td", row).each(function () {
            //    if ($(this).find("input").length > 0) {
            //        var span = $(this).find("span");
            //        var input = $(this).find("input");
            //        span.html(input.val());
            //        span.show();
            //        input.hide();
            //       $(this).removeClass('selected');
            //    }
            //});
            row.find(".Change").show();

            row.find(".Add").hide();
            row.find(".Update").hide();
            row.find(".Cancel").hide();
            $(this).hide();

            var ProjectionModel = {};
            var validationFailed = false;
            var addSameRecord = false;
            var loadUrl = '@Url.Action("AddOrUpdateProjectionModel", "Projection")';
            if (row.find("select#ddlWarehouseID").val() == "") {
                alert("Please select Facility to Proceed.");
                $(row).addClass('highlight_row')
                validationFailed = true;
                span.show();
                input.hide();
                return;
            }
            if (row.find("input#endTime").val() == "") {
                alert("Please select InvoicedDate to Proceed.");
                $(row).addClass('highlight_row')
                validationFailed = true;
                span.show();
                input.hide();
                return;
            }
            if (row.find("input#startTime").val() == "") {
                alert("Please select AllocatedDate to Proceed.");
                $(row).addClass('highlight_row')
                validationFailed = true;
                span.show();
                input.hide();
                return;
            }
             if (isAdd) {
                 var canContinue = true;
                 if (row.find("input#hdnTxtDtInvced").val() == row.find("input#endTime").val() &&
                     row.find("select#hdnddlWarehouseId").val() == row.find("select#ddlWarehouseID").val() &&
                     row.find("input#hdnTxtQnty").val() == row.find("input#quantity").val() &&
                     row.find("input#hdntxtActivityDesc").val() == row.find("input#txtActivityDesc").val()) {

                     $.confirm({
                         title: 'Confirm!',
                         content: 'Are you sure you want to add the record for same Facility, Date and Quantity?',
                         buttons: {
                             confirm: function () {
                                 var model = {
                                     'OpportunityId': row.find("span#txtOpportunityId").text(),
                                     'Quantity': row.find("input#quantity").val(),
                                     'DateAllocated': row.find("input#startTime").val(),
                                     'DateInvoiced': row.find("input#endTime").val(),
                                     'WarehouseID': row.find("select#ddlWarehouseID").val(),
                                     'ServiceActivityId': row.find("#txtServiceActvty").val(),
                                     'ActivityId': row.find("#txtActvty").val(),
                                     'Comments': row.find("input#comments").val(),
                                     'IsAdd': isAdd

                                 };
                                 if (!validationFailed) {
                                     $.ajax({
                                         data: model,
                                         url: '@Url.Action("AddOrUpdateProjectionModel", "Projection")',
                                         type: "POST",
                                         success: function (data) {
                                             if (data.status === 'OK') {
                                                 window.location.href = data.Url
                                             }
                                             else {
                                                 alert("The status cannot be updated at this time");
                                             }
                                         }
                                     });
                                 }
                             },
                             cancel: function () {

                                 return;
                             }
                         }

                     });
                 }

             }
             else {
                 var model = {
                'OpportunityId': row.find("span#txtOpportunityId").text(),
                'Quantity': row.find("input#quantity").val(),
                'DateAllocated': row.find("input#startTime").val(),
                'DateInvoiced': row.find("input#endTime").val(),
                'WarehouseID': row.find("select#ddlWarehouseID").val(),
                'ServiceActivityId': row.find("#txtServiceActvty").val(),
                'ActivityId': row.find("#txtActvty").val(),
                'Comments': row.find("input#comments").val(),
                'IsAdd': isAdd

            };
                    if (!validationFailed) {
                        $.ajax({
                            data: model,
                            url: '@Url.Action("AddOrUpdateProjectionModel", "Projection")',
                            type: "POST",
                            success: function (data) {
                                if (data.status === 'OK') {
                                    window.location.href = data.Url
                                }
                                else {
                                    alert("The status cannot be updated at this time");
                                }
                            }
                        });
                    }
             }
            
        });
    }
    function CallConfirmMessage(canContinue) {
        
    }
    $("body").on("click", "#MANAGEPROJECTION .Cancel", function () {
        var row = $(this).closest("tr");
        $("td", row).each(function () {
            if ($(this).find("input").length > 0) {
                var span = $(this).find("span");
                var input = $(this).find("input");
                //input.val(span.html());
                span.show();
                 $(this).removeClass('selected');
                input.hide();
            }
        });
        row.find(".Change").show();
        row.find(".Add").hide();
        row.find(".Update").hide();
        row.find("input#txtActivityDesc").show();
        $(this).hide();

    });
    function SpanShow() {
        span.show();
                 $(this).removeClass('selected');
                input.hide();
    }
</script>


<style>

    .textarea {
        max-width: 280px;
        font-size: 10px;
        border: 2px;
        outline: 2px;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }


    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }



    /* Active State */
    .x-tab-pane > .active > a, .x-tab-pane > .active > a:hover {
        background-color: #f0f0f0;
    }

    .form-group {
        margin-bottom: 2px;
        padding-right: 0;
        padding-left: 0;
        font-size: 10px;
        border-radius: 9px;
        padding-bottom: 2px;
        margin-top: 0px;
    }


    .row-group {
        width: 47%;
        min-height: 100px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-left: 5px;
        padding-right: 5px;
        margin-bottom: 20px;
        background-color: whitesmoke;
        border: 1px solid #e3e3e3;
        border-radius: 2px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
    }

    .commentsLine {
        max-width: 50px;
        word-wrap: break-word;
    }

    .txtQuantity {
        width: 30px;
    }

    input[type=text] {
        color: #000;
        background-color: #fff;
    }

    .selected {
        color: black;
        background-color: lightgray;
    }

    .table-hover > tbody > tr:hover > td,
    .table-hover > tbody > tr:hover > th {
        background-color: lightgray;
    }

    .row {
        width: 112%;
    }

    .body-content {
        padding-left: 0px;
        padding-right: 0px;
        max-width: 100%;
    }

    .container {
        padding-left: 0px;
        padding-right: 5px;
        max-width: 100%;
    }

    .dataTables_filter {
        float: right;
    }

    .modal-header {
        border-bottom: 0 none;
    }

    .modal-footer {
        border-top: 0 none;
    }

    .glyphicon {
        font-size: 14px;
        color: lightgray;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }


    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }

    .black {
        color: black;
    }

    .highlight_row {
        background-color: #CCC;
        color: black;
    }

    a.btn:hover {
        -webkit-transform: scale(0.8);
        -moz-transform: scale(0.8);
        -o-transform: scale(0.8);
    }

    a.btn {
        -webkit-transform: scale(0.6);
        -moz-transform: scale(0.6);
        -o-transform: scale(0.6);
        -webkit-transition-duration: 0.5s;
        -moz-transition-duration: 0.5s;
        -o-transition-duration: 0.5s;
    }
</style>
