@using System.Linq;
@*@model IEnumerable<TimeSheet.Models.ProjectDetailsModel>*@
@model TimeSheet.Models.ProjectionModel
@{
    ViewBag.Title = "Index";
}
<script src="https://code.jquery.com/jquery-3.3.1.js" type="text/javascript"></script>
<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src=" https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://unpkg.com/balloon-css/balloon.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>


<table class="table pull-right" style="width:50%;margin-right:170px">
   
</table>

<div class="container" style="margin-left:0px">
    @using (Html.BeginForm("ExportProjections", "Projection", FormMethod.Post))
    {
        <div class="row">
            <button type="submit" class="btn btn-default btn-sm" style="padding-left:10px;padding-top:2px;margin-left:10px">
                <span class="glyphicon glyphicon-export"></span> Export
            </button>
        </div>
    }
    <div class="row" id="MANAGEPROJECTIONMAIN">
        <div class="col-md-12">
            <table class="table-bordered table-responsive-md text-center table-hover table-scroll" id="MANAGEPROJECTIONMAIN">
                <thead style="background-color:#FFA500;color:white ">
                    <tr>

                        <th>ProjectName</th>
                        <th>Oppurtunity</th>
                        <th>PM</th>
                        <th>Services</th>
                        <th>Facility</th>
                        <th>Week</th>
                        <th>Quantity</th>
                        <th>EstimatedInvoiceDate</th>
                        <th>Comments&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
                        <th class="hidden"></th>
                        <th class="hidden"></th>
                        <th class="hidden"></th>

                    </tr>
                </thead>
                <tbody class="table">
                    @foreach (var item in Model.projectionOpportunityModel)
                    {
                        <tr>
                            <td class="ProjectName">
                                <span id="txtProjectName"> @Html.DisplayFor(modelItem => item.ProjectName) </span>
                            </td>
                            <td class="opportunity">
                                <a href="javascript:void(0);" class="CandidateName" data-id="@item.OpportunityNumber">@Html.DisplayFor(modelItem => item.OpportunityNumber)</a>
                            </td>
                            <td class="PM">
                                <span id="txtPM">@Html.DisplayFor(modelItem => item.ProjectManager) </span>
                            </td>
                            <td title="@item.Activity @Environment.NewLine  @Environment.NewLine Actual Quantity: @item.ActualQuantity &nbsp;- Current Quantity: @item.Quantity">
                                <input type="text" id="txtActivityDesc" value='@item.Activity' disabled="disabled" />
                                <input class="hidden" type="text" id="hdntxtActivityDesc" value="@item.Activity" />


                            </td>
                            <td class="dropdownListTD">

                                @Html.DropDownList("ddlWarehouseID", Model.WarehouseList, "Facility")

                                <input class="hidden" type="text" id="hdnddlLidt" value="@item.wareHouseName" />
                                @Html.DropDownList("hdnddlWarehouseId", Model.WarehouseList, "Facility", new { @class = "hidden" })

                            </td>
                            <td>
                                @if (item.Quantity >= 0)
                                {
                                    if (item.DateAllocated.HasValue)
                                    {
                                        <span id="startTime">@item.DateAllocated.Value.ToShortDateString()</span>
                                        @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                        <input class="hidden" type="text" id="hdnTxtDtAlctd" value="@item.DateAllocated.Value.ToString("yyyy-MM-dd")" />


                                    }
                                    else
                                    {
                                        <span id="startTime"></span>
                                        @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                    }
                                }
                                else
                                {
                                    <span id="startTime"></span>
                                    @Html.TextBoxFor(m => item.DateAllocated, "{0:yyyy-MM-dd}", new { @type = "date", @id = "startTime", @style = "display:none" })
                                }

                            </td>
                            <td>

                                <span>@Html.DisplayFor(modelItem => item.Quantity)</span>
                                <input type="text" id="quantity" class="txtQuantity" value="@item.Quantity" style="display:none" />
                                <input class="hidden" type="text" id="hdnTxtQnty" value="@item.Quantity" />
                            </td>
                            <td>

                                @if (item.Quantity >= 0)
                                {
                                    if (item.DateInvoiced.HasValue)
                                    {
                                        <span id="endTime">@item.DateInvoiced.Value.ToShortDateString()</span>
                                        @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                        <input class="hidden" type="text" id="hdnTxtDtInvced" value="@item.DateInvoiced.Value.ToString("yyyy-MM-dd")" />

                                    }
                                    else
                                    {
                                        <span id="endTime"></span>
                                        @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                    }
                                }
                                else
                                {
                                    <span id="endTime"></span>
                                    @Html.TextBoxFor(m => item.DateInvoiced, "{0:yyyy-MM-dd}", new { @type = "date", @id = "endTime", @style = "display:none" })
                                }

                            </td>
                            <td class="commentsLine">
                                <span id="comments">@item.Comments</span>
                                <input type="text" id="comments" value="@item.Comments" style="display:none" />
                            </td>
                            <td class="hidden"><input type="text" id="txtServiceActvty" value="@item.ServiceActivityId" /></td>
                            <td class="hidden"><input type="text" id="txtActvty" value="@item.ServiceRevenueId" /></td>
                            <td class="hidden"><input type="text" id="txtId" value="@item.Id" /></td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>


    </div>
</div>

<div id='filterModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='filterModalContent'></div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery-ui.min.js")"></script>
    <script type="text/javascript">
    </script>
}
<script language="javascript" type="text/javascript">
        function InsertSpaces(value) {
            var emptySpaceString = "";
            for (i = 0; i < value; i++)
            {
                emptySpaceString +="&nbsp;"
            }
            return emptySpaceString;
    }
 SetDDLValue();
    $(document).ready(function () {
       // alert('document ready');
        $('table#MANAGEPROJECTIONMAIN').DataTable();
       // SetDDLValue();


    });


    function SetDDLValue() {
        //alert('before document ready');
        $("tbody tr td.dropdownListTD").each(function LoopTR() {
            var ratingTdText = $(this);
            if ($(ratingTdText).find("#hdnddlLidt").val() != "") {
                 $(ratingTdText).find("#ddlWarehouseID option").each(function(i){
                     //alert($(ratingTdText).find("#hdnddlLidt").val());
                     if (($(this).text() == $(ratingTdText).find("#hdnddlLidt").val())) {
                         $(this).attr('selected','selected')
                     }
                });
            }
             if ($(ratingTdText).find("#hdnddlLidt").val() != "") {
                 $(ratingTdText).find("#hdnddlWarehouseId option").each(function(i){
                     //alert($(ratingTdText).find("#hdnddlLidt").val());
                     if (($(this).text() == $(ratingTdText).find("#hdnddlLidt").val())) {
                         $(this).attr('selected','selected')
                     }
                });
            }

        });
    }
    var projectionsUrl = './GetProjections';
    $(function () {
        $("#MANAGEPROJECTIONMAIN").on("click", ".opportunity", function () {
            // debugger;
            var $buttonClicked = $(this);
            var opportunityId = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: projectionsUrl,
                contentType: "application/json; charset=utf-8",
                data: { "opportunityId": $(this).text().trim() },
                datatype: "json",
                success: function (data) {
                    // debugger;
                    $('#filterModalContent').html(data);
                    $('#filterModal').modal(options);
                    $('#filterModal').modal('show');
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
    });
    
 

   

   
                
</script>


<style>

    .textarea {
        max-width: 280px;
        font-size: 10px;
        border: 2px;
        outline: 2px;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }


    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }



    /* Active State */
    .x-tab-pane > .active > a, .x-tab-pane > .active > a:hover {
        background-color: #f0f0f0;
    }

    .form-group {
        margin-bottom: 2px;
        padding-right: 0;
        padding-left: 0;
        font-size: 10px;
        border-radius: 9px;
        padding-bottom: 2px;
        margin-top: 0px;
    }


    .row-group {
        width: 47%;
        min-height: 100px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-left: 5px;
        padding-right: 5px;
        margin-bottom: 20px;
        background-color: whitesmoke;
        border: 1px solid #e3e3e3;
        border-radius: 2px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
    }

    .commentsLine {
        max-width: 50px;
        word-wrap: break-word;
    }

    .txtQuantity {
        width: 30px;
    }

    input[type=text] {
        color: #000;
        background-color: #fff;
    }

    .selected {
        color: black;
        background-color: lightgray;
    }

    .table-hover > tbody > tr:hover > td,
    .table-hover > tbody > tr:hover > th {
        background-color: lightgray;
    }

    .row {
        width: 112%;
    }

    .body-content {
        padding-left: 0px;
        padding-right: 0px;
        max-width: 100%;
    }

    .container {
        padding-left: 0px;
        padding-right: 5px;
        max-width: 100%;
    }

    .dataTables_filter {
        float: right;
    }

    .modal-header {
        border-bottom: 0 none;
    }

    .modal-footer {
        border-top: 0 none;
    }

    .glyphicon {
        font-size: 14px;
        color: lightgray;
    }

    .btn-primary, .btn-primary:hover, .btn-primary:active, .btn-primary:visited {
        background-color: #FFA500;
        border-color: white;
    }


    .page-item.active .page-link {
        color: white !important;
        background-color: orange !important;
        border-color: gray !important;
    }

    .black {
        color: black;
    }

    .highlight_row {
        background-color: #CCC;
        color: black;
    }

    a.btn:hover {
        -webkit-transform: scale(0.8);
        -moz-transform: scale(0.8);
        -o-transform: scale(0.8);
    }

    a.btn {
        -webkit-transform: scale(0.6);
        -moz-transform: scale(0.6);
        -o-transform: scale(0.6);
        -webkit-transition-duration: 0.5s;
        -moz-transition-duration: 0.5s;
        -o-transition-duration: 0.5s;
    }
    /* Tooltip container */
    .tooltip {
        position: relative;
        display: inline-block;
        border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
    }

        /* Tooltip text */
        .tooltip .tooltiptext {
            visibility: hidden;
            width: 120px;
            background-color: #555;
            color: #fff;
            text-align: center;
            padding: 5px 0;
            border-radius: 6px;
            /* Position the tooltip text */
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -60px;
            /* Fade in tooltip */
            opacity: 0;
            transition: opacity 0.3s;
        }

            /* Tooltip arrow */
            .tooltip .tooltiptext::after {
                content: "";
                position: absolute;
                top: 100%;
                left: 50%;
                margin-left: -5px;
                border-width: 5px;
                border-style: solid;
                border-color: #555 transparent transparent transparent;
            }

        /* Show the tooltip text when you mouse over the tooltip container */
        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }

</style>
